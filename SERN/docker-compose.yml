version: "3.7"

networks:
  sern-local:

services:
  sern-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: sern-api
    working_dir: /home/node/app
    entrypoint: "npm run live"
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ~/.aws:/root/.aws
      - ./api:/home/node/app
    environment:
      - NODE_ENV=local
      - API_PORT=${API_PORT}
      - DEBUG=${DEBUG}
      - DEBUG_HIDE_DATE=${DEBUG_HIDE_DATE}
      - DEBUG_COLORS=${DEBUG_HIDE_DATE}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - MONGODB_URL=${MONGODB_URL}
    networks:
      sern-local:

  sern-mysql:
    image: mysql
    container_name: sern-mysql
    restart: unless-stopped
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      sern-local:

  sern-phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: sern-phpmyadmin
    restart: unless-stopped
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - PMA_HOST=sern-mysql
    networks:
      sern-local:

  sern-nginx:
    image: nginx:1.15-alpine
    container_name: sern-nginx
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./client/build:/usr/share/nginx/html
    ports:
      - 80:80
      - 443:443
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
